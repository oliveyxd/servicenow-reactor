<?xml version="1.0" encoding="UTF-8"?><record_update table="x_snc_reactor_component">
    <x_snc_reactor_component action="INSERT_OR_UPDATE">
        <content_css/>
        <dependencies>e7d38ca0db4e5510dcbdd03cd3961911,cf54ac20dbce5510dcbdd03cd396197a,b11cdde0db829510dcbdd03cd39619f3,96785174db0295109232dad1f39619fb,39f6fa3cdb0695109232dad1f39619ed,1fb0773edb92d110f359c1911596194d,2c0168dfdbded110f359c1911596195f</dependencies>
        <description>Demonstrates the capability of Reactor to embedd React components into a ServiceNow UI Page.</description>
        <jsx>false</jsx>
        <name>ReactorDemoApp</name>
        <role>app</role>
        <script><![CDATA[class ReactorDemoApp extends React.Component
{
	constructor(props)
	{
		super(props);
		this.state = {
			state: 'home',
			ruler_value: 50
		};
		
		this.onHeaderMenuClick = this.onHeaderMenuClick.bind(this);
		
		this.onButtonClick = this.onButtonClick.bind(this);
		this.onRulerChange = this.onRulerChange.bind(this);
	}

	onHeaderMenuClick(strOption)
	{
		this.setState( {state: strOption } );
	}
	
	onButtonClick()
	{
		DoModalMessage('Reactor','The button has been clicked!',function(){});		
	}
	onRulerChange(nNewValue)
	{
		this.setState( { ruler_value: nNewValue} );
	}	
	
	render()
	{
		var strText = GetStringValue(this.props.text);
		if (strText == '')
		{
			strText = 'This is a demonstration of the Reactor app capability to embedd React components in ServiceNow.';
		}

		
		var aMenuItems = [];
		aMenuItems.push({ label: 'Home', option: 'home' });
		aMenuItems.push({ label: 'Button', option: 'button' });
		aMenuItems.push({ label: 'Clock', option: 'clock' });
		aMenuItems.push({ label: 'Ruler', option: 'ruler' });
		aMenuItems.push({ label: 'ReactorJSXDemo', option: 'jsx' });
		aMenuItems.push({ label: 'IFrame', option: 'iframe' });
			
		var aComponents = [];
		aComponents.push(e(HeaderMenu,
			{
				key: 'header_menu',
				items: aMenuItems,
				active: this.state.state,
				callbackOnClick: this.onHeaderMenuClick
			}, null));
	
		
		if (this.state.state == 'home')
		{
			aComponents.push(e('p', { key: 'text' }, strText));
		}
		else if (this.state.state == 'button')
		{
			aComponents.push(e(Button,
				{
					key: 'button',
					text: 'Please click this button',
					className: 'btn btn-primary',
					callbackOnClick: this.onButtonClick 
				}, null));
		}
		else if (this.state.state == 'clock')
		{
			aComponents.push(e(Clock,
				{
					key: 'clock'
				}, null));
		}
		else if (this.state.state == 'ruler')
		{
			aComponents.push(e(Ruler,
				{
					key: 'ruler', 
					max: 100,
					value: this.state.ruler_value,
					callbackOnChange: this.onRulerChange
				}, null));
			aComponents.push(e('div',{ key: 'ruler_value' },'The value is '+this.state.ruler_value));	
		}
		else if (this.state.state == 'jsx')
		{
			aComponents.push(e(ReactorJSXDemo,{ key: 'jsx', label: 'A button made with JSX' },null));	

		}		
		else if (this.state.state == 'iframe')
		{
			aComponents.push(
				e('div', { width: '100%', height: '100%' },
					e(IFrame,{ key: 'iframe', url: '/incident_list.do' },null)
				)
			);	

		}		
		
		return e('div',null,aComponents);
	}
	
}]]></script>
        <source_type>ui_script</source_type>
        <sys_class_name>x_snc_reactor_component</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-09-16 17:46:33</sys_created_on>
        <sys_id>2332e8acdb8e5510dcbdd03cd39619c3</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>ReactorDemoApp</sys_name>
        <sys_package display_value="Reactor WORK IN PROGRESS" source="x_snc_reactor">e5879c7fdb39d110dcbdd03cd3961946</sys_package>
        <sys_policy/>
        <sys_scope display_value="Reactor WORK IN PROGRESS">e5879c7fdb39d110dcbdd03cd3961946</sys_scope>
        <sys_update_name>x_snc_reactor_component_2332e8acdb8e5510dcbdd03cd39619c3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-10-07 17:01:58</sys_updated_on>
        <type>script</type>
        <ui_script display_value="x_snc_reactor.ReactorDemoApp">cab950e4db8e5510dcbdd03cd3961940</ui_script>
        <url/>
    </x_snc_reactor_component>
</record_update>
